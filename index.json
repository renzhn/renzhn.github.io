[{"content":"前言 2021年有哪些便宜VPS？最便宜VPS是哪家？VPS市场几年时间变化甚多，有的一路涨价，有的卷款跑路，有的变化路由，有的带宽缩水，那么2021年还有哪些VPS值得推荐呢？\n一、Vultr 推荐指数： ★★★★★\n全球最优秀的VPS服务商之一，美国Choopa机房的旗下的业务，产品性能比较优越，因而在业内口碑还算是比较好的。机器部署在全球17个数据中心，包括日本、韩国、新加坡、韩国、美国、荷兰等；支持：IPV6、按小时付款、快照、区块存储、自定义ISO等多种特性。KVM架构，1Gbps带宽，50G免费备份空间，可以一键将备份好的实例还原到新建的实例里。迈阿密等延时高的机房挺稳定的，东京延时低但丢包率有点高，支持支付宝、Paypal、信用卡、Bitcoin付款，2.5$/mo起。按小时计费，可以通过重建实例实现自由切换IP.\n因为Vultr实际可以长期占用CPU 100%，所以可以一键DD Windows系统，然后通过远程桌面登录，这样我们就相当于租用了一台国外的电脑了。\n这里提供一个秋水大佬的一键脚本，只需要一键运行，断开后等待30分钟左右即可用win10系统自带的远程桌面登录，等不急的可以用VNC连接远程桌面查看进度：\nwget --no-check-certificate -qO DebianNET.sh qiu.sh/dd \u0026amp;\u0026amp; bash DebianNET.sh -dd \u0026#34;https://mirrors.yuntu.ca/teddysun/cn_windows2012r2.gz\u0026#34; 安装完成后用Windows自带远程桌面mstsc命令连接，计算机填写VPS的IP地址，默认用户名：Administrator，默认密码：Password147，登录后务必更改密码，由于秋水大佬在圈内的口碑很好，大家不用担心故意留有后门这种操作。\n Vultr正在做活动，新注册用户充值$10之后，将获得$100赠送余额，赠送的额度有效期为30天。注意：充$10送$100活动只针对新用户，老用户无效，并且必须绑定信用卡或PayPal来激活，其他任何充值方式无法享受。【点击注册】\n 官方网站\nhttps://www.vultr.com\n各数据中心在线Ping测速\nhttps://cloudpingtest.com/vultr\n网络测试\n   地理位置 官方Looking Glass地址     (Asia)Tokyo, Japan[日本 东京] https://hnd-jp-ping.vultr.com   Singapore[新加坡] https://sgp-ping.vultr.com   (AU) Sydney, Australia[悉尼] https://syd-au-ping.vultr.com   (EU) Frankfurt, DE[德国 法兰克福] https://fra-de-ping.vultr.com   (EU) Amsterdam, NL[荷兰 阿姆斯特丹] https://ams-nl-ping.vultr.com   (EU) London, UK[英国 伦敦] https://lon-gb-ping.vultr.com   (EU) Paris, France[法国 巴黎] https://par-fr-ping.vultr.com   Seattle, Washington[美东 华盛顿州 西雅图] https://wa-us-ping.vultr.com   Silicon Valley, Ca[美西 加州 硅谷] https://sjo-ca-us-ping.vultr.com   Los Angeles, Ca[美西 加州 洛杉矶] https://lax-ca-us-ping.vultr.com   Chicago, Illinois[美东 芝加哥] https://il-us-ping.vultr.com   Dallas, Texas[美中 德克萨斯州 达拉斯] https://tx-us-ping.vultr.com   New York / New Jersey[美东 新泽西] https://nj-us-ping.vultr.com   Atlanta, Georgiaa[美东 乔治亚州 亚特兰大] https://ga-us-ping.vultr.com   Miami, Florida[美东 佛罗里达州 迈阿密] https://fl-us-ping.vultr.com    二、CloudCone 推荐指数：★★★★★\nCloudCone是一家成立于2017年美国VPS云服务租用主机商，CloudCone美国VPS主机位于美国洛杉矶，均采用KVM架构，接入的是1Gbps带宽。洛杉矶MultaCom机房，默认可选ArchLinux系统，自带一个IPv4、3个IPv6，硬盘是SSD RAID-10，自带Snapshot功能，加Auto Backup的话每个月就多加VPS本身月付价值的30%即可。根据以往的经验在白天的时候电信、联通的效果都还是可以的，在晚上高峰期除了联通之外的电信和移动都是惨不忍睹的。\n带有免费的按需 DDoS 防护（还有付费的全天候 DDoS 防护），以及每两周一次的全服务器无差别快照备份，如果有恢复需求可以直接找客服。\n另外，对于普通实例，CloudCone 对资源收费是很详细的，分为 CPU、内存、硬盘、IP 四个部分，前三者可以自由定制，额外的公网 IP 需要联系客服申请。\n如果你的服务器处于关机状态，将只收取硬盘以及 IP 的费用，也就是说如果服务器闲置了又不想删掉的话可以关机省钱。 不过这一计费机制只用于普通实例，如果是优惠套餐则有另外一套计费方案。\n CloudCone最近在做“2021 Flash Sale”活动- 3款大流量vps，给5T流量，虽然内存、硬盘给的不算大，但是好在价格便宜，所以也算得上性价比不错的美国大流量VPS。\n 2021闪购特别促销活动\nVPS特征：KVM虚拟，纯SSD，1Gbps带宽，一个IPv4，3个IPv6。\n   内存 CPU SSD 流量 价格 购买     512M 1核 15G 5T/月 $12.95/年 链接   768M 1核 20G 5T/月 $14.02/年 链接   1G 1核 30G 5T/月 $15.00/年 链接    Windows Server 2016和2019授权版VPS，自带一个IPv4：\n   内存 CPU SSD 流量 价格 购买     4G 3核 60G 3T/月 $17.49/月 链接   8G 5核 120G 5T/月 $32.94/月 链接   16G 8核 240G 8T/月 $62.79/月 链接   32G 16核 500G 10T/月 $125.76/月 链接    套餐说明\n 均为 KVM 虚拟化 自动两周一次全服务器备份 如果有恢复需求请发工单 套餐实际均为按小时计费 无论是月付套餐还是年付套餐，虽然扣款时是一次性按月付/年付价格扣费，但实际上仍是小时计费，如果你中途删除套餐，会按剩余时间比例退款至你的账户余额 购买前必须充值足够的余额才能购买，支持PayPal和支付宝  官方网站\nhttps://cloudcone.com/\n网络测试\nIPv4: 173.82.2.222\nIPv6: 2607:f130:0:c2::2:222\nLooking glass: http://la.lg.cloudc.one\nDownload: http://la.lg.cloudc.one/100MB.test\n三、VirMach 推荐指数：★★★★★\nVirMach是一家成立于2014年的美国主机商，提供美国虚拟主机、美国云服务器VPS和独立服务器产品服务，一直以来走的都是低价路线，号称VPS中的“价格屠夫，性价比之王”。VirMach提供基于KVM、OpenVZ架构的便宜VPS主机，包括Windows和Linux操作系统，其整体性能比较好。\nVirMach机房主要分布在美国和欧洲，共有 10 个机房。由国内平均 ping 值来看，洛杉矶、圣何塞、西雅图和凤凰城机房都表现不错，全国平均延时均在 200ms 以下。这也验证了国内一般购买美国地区机房时，优先选择美国西海岸机房的原则。圣何塞的网络延时更是只有 167ms，比洛杉矶还少了十几毫秒，果然直接走中美海底光缆的速度还是最快的。\nCyber Monday 特价促销活动\n基于KVM虚拟，纯SSD RAID-10，1Gbps带宽，自带一个IPv4，SolusVM面板，可选机房：水牛城、洛杉矶、达拉斯、芝加哥、西雅图、亚特兰大、皮斯卡塔韦、圣何塞。\n   内存 CPU SSD 流量 价格 购买     512M 1核 15G 500G/月 $7/年 链接   768M 1核 20G 750G/月 $10/年 链接   1G 1核 30G 1T/月 $14/年 链接   2G 2核 50G 2T/月 $21/年 链接   3G 2核 75G 3T/月 $28/年 链接   4G 2核 100G 4T/月 $35/年 链接    官方网站\nhttps://virmach.com\n网络测试\n   机房 官方测试IP Looking Glass 速度测试文件     洛杉矶, 加州 107.173.137.3 http://la.lg.virmach.com 25MB - 50MB - 100MB   法兰克福, 德国 50.3.75.98 http://ffm.lg.virmach.com 25MB - 50MB - 100MB   阿姆斯特丹, 荷兰 104.206.242.2 http://ams.lg.virmach.com 25MB - 50MB - 100MB   水牛城, 纽约州 107.173.176.5 http://ny.lg.virmach.com 25MB - 50MB - 100MB   皮斯卡特维, 新泽西州 107.174.64.68 http://nj.lg.virmach.com 25MB - 50MB - 100MB   达拉斯, 德克萨斯州 23.95.41.200 http://dal.lg.virmach.com 25MB - 50MB - 100MB   凤凰城, 亚利桑那州 173.213.69.188 http://phx.lg.virmach.com 25MB - 50MB - 100MB   洛杉矶 (高防) 45.43.7.8 http://filtered-la.lg.virmach.com 25MB - 50MB - 100MB   芝加哥, 伊利诺伊州 170.130.139.3 http://chi.lg.virmach.com 25MB - 50MB - 100MB   西雅图, 华盛顿州 104.140.22.36 http://sea.lg.virmach.com 25MB - 50MB - 100MB   亚特兰大, 佐治亚州 107.172.25.131 http://atl.lg.virmach.com 25MB - 50MB - 100MB   圣何塞, 加州 107.172.96.135 http://sj.lg.virmach.com 25MB - 50MB - 100MB    四、BuyVM 推荐指数：★★★★☆\nBuyVM绝大多数用国外便宜VPS的人应该多少都应该了解点儿，这家2010年成立的加拿大VPS商家当初可是国内外用户晚上不睡觉追着抢他们家的VPS的，因为库存不足的时候大家只能蹲点守候，上架就被秒杀\u0026hellip;扯远了，我们来说说BuyVM的VPS如何用最节俭的方式存储海量的数据！\nVPS项目特性\nLV=拉斯维加斯，NY=纽约，LU=卢森堡（欧洲），基于KVM虚拟，AMD Ryzen 9 3900X、纯SSD（RAID-10，FDE加密），1Gbps带宽，不限制流量，自带一个IPv4，免费提供DirectAdmin面板授权，免费提供Windows Server 2008R2\\2012R2授权；提供收费备份服务（512M和1G内存的VPS，每个月收0.5美元，其他配置的VPS按照月付价格的10%收取），每个VPS提供5个免费的Snapshot（VPS快照）。\n   内存 CPU SSD 价格 购买       512M 1核 10G $2/月 LV NY LU   1G 1核 20G $3.5/月 LV NY LU   2G 1核 40G $7.0/月 LV NY LU   4G 1核 80G $15/月 LV NY LU   8G 2核 160G $30/月 LV NY LU   12G 3核 240G $45/月 LV NY LU   16G 4核 320G $60/月 LV NY LU   20G 5核 400G $75/月 LV NY LU   24G 6核 480G $90/月 LV NY LU   28G 7核 560G $105 /月 LV NY LU    Block Storage Slabs特性\n采用 InfiniBand + RDMA技术，接入40Gb带宽，块存储的方法很多，每个主机在提供它的方式上各不相同。 解决方案从NFS或GlusterFS到ISCSI或Ceph，一直到EMC的硬件设备。\n目前，只有拉斯维加斯、纽约提供块存储服务，卢森堡暂时还要等待！\n拉斯维加斯：https://my.frantech.ca/cart.php?gid=42\n纽约：https://my.frantech.ca/cart.php?gid=45\n   大小 价格     256G $1.25/月   512G $2.50/月   1T $5.00/月   2T $10.0/月   \u0026hellip; \u0026hellip;   10T $50.0/月    提示下：每个VPS支持挂载8个块存储，每个块存储最大支持10T硬盘。\n如何使用？\n首先，你需要购买一个VPS（Dedicated KVM Slices），然后你再买一个块存储（Block Storage Slabs），接着你在自己的VPS上面挂载这个块存储就可以啦！\n具体方法：\n进入管理后台（https://manage.buyvm.net/login），将 Block Storage 附加到（Attached To） VPS。\n查看数据盘标号/名称\n[root@us-cdn-west-1 ~]# ls /dev/disk/by-id/\nata-QEMU_DVD-ROM_QM00004 scsi-0BUYVM_SLAB_VOLUME-1227\nscsi-0BUYVM_SLAB_VOLUME-1227 就是数据盘，1227 是数据盘 id，后台也能看到。\n格式化\nmkfs.ext4 -F /dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-1227\n创建加载文件夹\n请根据实际需要创建\nmkdir -p /mnt/256\n挂载\nmount -o discard,defaults /dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-1227 /mnt/256\n开机/重启自动挂载 echo '/dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-1227 /mnt/256 ext4 defaults,nofail,discard 0 0' | sudo tee -a /etc/fstab\n官方网站\nhttps://buyvm.net\n网络测试\n拉斯维加斯：https://speedtest.lv.buyvm.net\n纽约：https://speedtest.ny.buyvm.net\n卢森堡（欧洲）：https://speedtest.lu.buyvm.net\n五、HostWinds 推荐指数：★★★★☆\n如果说美国云服务器、美国VPS哪个商家的价格便宜又服务特别好，我会推荐HostWinds！把Managed业务做成Unmanaged的价格，HostWinds可能是市场上唯一的商家！\nHostWinds成立于2010年，公司总部位于美国西雅图，主要运作：虚拟主机（Shared Hosting，cPanel面板，每个都自带一个独立IP）、云服务器（VPS，包括托管型和非托管型）、独立服务器，数据中心分布在美国（西海岸的西雅图，中部的达拉斯）、荷兰（阿姆斯特丹）。支持按小时计费，信用卡、PayPal、支付宝均可付款；支持IP管理、负载均衡、数据备份、快照、防火墙、容器、对象存储、API、SSH管理、自定义ISO、自由升降配置、日志、图形记录，等等常规功能。\nHostWinds的VPS包含Linux和Windows系统，分为Managed托管型和Unmanaged非托管型。VPS产品包含托管型Linux VPS和非托管型的Linux VPS，托管Windows VPS 和非托管Windows VPS。\n Managed托管型的Hostwinds官方技术人员为服务器提供全套运维服务，省事省力，但是价格稍贵一些，有点不划算。 Unmanaged非托管型就是买个裸机VPS，随意DIY，包括系统在内的所有程序自己搭建（按流程很简单），在学会一些Linux的知识的同时还能省点钱，性价比较高。  官方网站\nhttps://www.hostwinds.com\n网络测试\n西雅图：http://sea-repo.hostwinds.net/tests/1gb.zip\n达拉斯：http://dal-repo.hostwinds.net/tests/1gb.zip\n阿姆斯特丹：http://ams-repo.hostwinds.net/tests/1gb.zip\n六、GigsgigsCloud 推荐指数：★★★★☆\nGigsgigsCloud是马来西亚华裔开的，在行业里运行时间较久，目前口碑不错，KVM/OpenVZ虚拟。这家的特色就是提供CN2 GIA线路的高防VPS，既保障了速度又有安全性，生产环境的建站可以入手。许多IDC会通过技术手段强行由CN2 GT接入CN2 GIA线路，这种最近已经被电信治理了，而GigsgigsCloud的CN2 GIA是通过正规渠道从电信购买，可以放心使用。CN2 GIA对电信、联通、移动都很友好，支持PayPal和支付宝以及Bitcoin付款。\nGigsgigsCloud近期新增了日本数据中心，接入的是CN2 GIA网络，最高200Mbps带宽，在国内访问，电信走CN2 GIA网络，联通和移动直连，速度非常快！支持支付宝等付款！注意，官方不提供退款！\n日本CN2 GIA VPS价格汇总，低至$7.3/月，KVM虚拟，纯SSD硬盘，自带一个IPv4：\n   内存 CPU SSD 流量 价格 购买     500M 1核 10G 300G/月 $88/年 链接   500M 1核 15G 150G/月 $18/月 链接   1G 1核 20G 250G/月 $48/月 链接   2G 2核 30G 300G/月 $88/月 链接    官方网址\nhttps://gigsgigscloud.com\n网络测试\nLooking glass：https://www.gigsgigscloud.com/looking-glass\n七、搬瓦工（BandwagonHost） 推荐指数：★★★★☆\n隶属于加拿大IT7公司，成立于2012年，早年因特别廉价迅速在国内圈里普及，目前开始逐渐转向服务企业客户，廉价套餐会不定时补货，但是频率很低。 KVM，SSD RAID-10 存储，1Gbps带宽，全球9个数据中心，其中洛杉矶数据中心有CN2 GT/CN2 GIA线路。支持支付宝 Paypal付款，6.25%折扣优惠码：BWH26FXH3HIQ ，长期有效。网络方面：\n CN2 GIA(DC9)对三网都友好 价格高 测试IP：65.49.131.102 CN2 GT目前有三条：DC2 DC3 DC8 QN机房（DC2）官方接入CN2 GT线路，没有带宽保证比较拥堵 测试IP：23.252.96.201， DC3的CN2 GT是瓦工买断了QN机房部分CN2 GT带宽，相比DC2相比好一些 测试IP：23.252.103.101， DC8的CN2 GT是C3机房的，即Zenlayer家的CN2 GT路线，目前据用户反馈DC8的CN2 GT比较好 测试IP：23.252.99.102 香港的线路很快，同时也贵 测试IP：23.252.97.148 MC机房(DC4)对电信联通比较友好 移动比较炸 测试IP：98.142.136.11， 一些非CN2线路的机房例如凤凰城，用的人少，比较稳定 其它机房的测试IP就不一一写了  网络速度 香港\u0026gt;CN2 GIA\u0026gt;CN2 GT\u0026gt;普通线路，价格也是递减的。\n在预算充足的情况下，不管你是电信、联通、还是移动，直接选香港机房！\n预算有限制：电信选美国CN2 GIA，联通选日本软银，移动建议美国CN2 GIA。\n不在乎速度，只要便宜，选网站首页的那5款VPS即可！\n*注：瓦工可以凭账号首个账单找回，最好不要买别人的账号。\n美国 CN2 GIA、日本软银，2.5~10Gbps带宽，市面唯一一家\n高达10Gbps带宽的美国 CN2 GIA和日本软银企业级网络带宽，基于KVM虚拟，SSD RAID-10阵列，自带一个IPv4，免费支持Snapshot快照功能（可以导入、导出）。除中国电信和软银官方之外，全球没有此类更高带宽的VPS或者云服务器商家了！\n   内存 CPU SSD 流量 带宽 价格 购买     1G 2核 20G 1.0T/月 2.5G $50/季 链接   2G 3核 40G 2.0T/月 2.5G $90/季 链接   4G 4核 80G 3.0T/月 2.5G $57/月 链接   8G 6核 160G 5.0T/月 5.0G $87/月 链接   16G 8核 320G 8.0T/月 10G $160/月 链接   32G 10核 640G 10.0T/月 10G $290/月 链接   64G 12核 1280G 12.0T/月 10G $550/月 链接    香港机房VPS，1Gbps带宽CN2 GIA线路，市面唯一一家\n适合预算高，对速度特别看重的用户，特征：KVM虚拟，1Gbps带宽，SSD RAID-10阵列，三网直连，CN2 GIA网络；每个VPS自带一个IPv4，后台有一键快照（备份VPS，还可以导入导出）功能。到目前为止，这是市面上唯一一家提供香港1Gbps带宽CN2 GIA线路的VPS！\n   内存 CPU 硬盘 流量 价格 购买     2G 2核 40G 500G/月 $90/月 链接   4G 4核 80G 1.0T/月 $156/月 链接   8G 6核 160G 2.0T/月 $300/月 链接   16G 8核 320G 4.0T/月 $590/月 链接    官方网址\n 搬瓦工官网 1：bandwagonhost.com（无法直接访问） 搬瓦工官网 2：bwh88.net（官方备用站点，放心访问）  专属优惠码\nBWH3HYATVBJW，下单时输入，节约6.58%，全场通用！\n网络测试\n 美国 CN2 GIA：162.244.241.103 日本软银：185.212.59.148 香港 CN2 GIA：93.179.124.167  八、狗云（DogYun） 推荐指数：★★★★☆\n国人商家，主打便宜的CN2 GIA套餐，是目前最具性价比之一的电信CN2 GIA VPS，双程CN2 GIA VPS，支持支付宝和微信付款。目前，DogYun运作香港KC、香港CLD、香港CMI、德国CN2、日本软银这4处数据的云服务器，还有香港CERA和美国CERA机房的独立服务器的业务。可选：CPU、内存、硬盘、额外流量(按每个G流量购买)，控制每天使用流量和带宽峰值、提供一键重装和ISO重装、VNC远程桌面等等。可以随意切换IP，每次10元。\n官方网址\nhttps://www.dogyun.com\n小结 基本上一分钱一分货，CN2 GIA最好，但是价格相对也较高。\n","permalink":"https://renzhn.github.io/posts/cheap-vps/","summary":"前言 2021年有哪些便宜VPS？最便宜VPS是哪家？VPS市场几年时间变化甚多，有的一路涨价，有的卷款跑路，有的变化路由，有的带宽缩水，那么2021年还有哪些VPS值得推荐呢？\n一、Vultr 推荐指数： ★★★★★\n全球最优秀的VPS服务商之一，美国Choopa机房的旗下的业务，产品性能比较优越，因而在业内口碑还算是比较好的。机器部署在全球17个数据中心，包括日本、韩国、新加坡、韩国、美国、荷兰等；支持：IPV6、按小时付款、快照、区块存储、自定义ISO等多种特性。KVM架构，1Gbps带宽，50G免费备份空间，可以一键将备份好的实例还原到新建的实例里。迈阿密等延时高的机房挺稳定的，东京延时低但丢包率有点高，支持支付宝、Paypal、信用卡、Bitcoin付款，2.5$/mo起。按小时计费，可以通过重建实例实现自由切换IP.\n因为Vultr实际可以长期占用CPU 100%，所以可以一键DD Windows系统，然后通过远程桌面登录，这样我们就相当于租用了一台国外的电脑了。\n这里提供一个秋水大佬的一键脚本，只需要一键运行，断开后等待30分钟左右即可用win10系统自带的远程桌面登录，等不急的可以用VNC连接远程桌面查看进度：\nwget --no-check-certificate -qO DebianNET.sh qiu.sh/dd \u0026amp;\u0026amp; bash DebianNET.sh -dd \u0026#34;https://mirrors.yuntu.ca/teddysun/cn_windows2012r2.gz\u0026#34; 安装完成后用Windows自带远程桌面mstsc命令连接，计算机填写VPS的IP地址，默认用户名：Administrator，默认密码：Password147，登录后务必更改密码，由于秋水大佬在圈内的口碑很好，大家不用担心故意留有后门这种操作。\n Vultr正在做活动，新注册用户充值$10之后，将获得$100赠送余额，赠送的额度有效期为30天。注意：充$10送$100活动只针对新用户，老用户无效，并且必须绑定信用卡或PayPal来激活，其他任何充值方式无法享受。【点击注册】\n 官方网站\nhttps://www.vultr.com\n各数据中心在线Ping测速\nhttps://cloudpingtest.com/vultr\n网络测试\n   地理位置 官方Looking Glass地址     (Asia)Tokyo, Japan[日本 东京] https://hnd-jp-ping.vultr.com   Singapore[新加坡] https://sgp-ping.vultr.com   (AU) Sydney, Australia[悉尼] https://syd-au-ping.vultr.com   (EU) Frankfurt, DE[德国 法兰克福] https://fra-de-ping.vultr.com   (EU) Amsterdam, NL[荷兰 阿姆斯特丹] https://ams-nl-ping.vultr.com   (EU) London, UK[英国 伦敦] https://lon-gb-ping.","title":"2021年便宜高性价比VPS推荐（最新）"},{"content":"介绍 CloudflareSpeedTest，用于测试Cloudflare节点延迟和下载速度的工具，支持ipv6。国外很多网站都在使用 Cloudflare CDN，但分配给中国访客的 IP 并不友好。虽然 Cloudflare 公开了所有 IP 段 ，但想要在这么多 IP 中找到适合自己的，怕是要累死，所以就有了这个软件。该软件可以测试 Cloudflare CDN 延迟和速度，获取最快 IP (IPv4+IPv6)。\n项目地址 GitHub：https://github.com/XIU2/CloudflareSpeedTest\n","permalink":"https://renzhn.github.io/posts/cloudflare-speedtest/","summary":"介绍 CloudflareSpeedTest，用于测试Cloudflare节点延迟和下载速度的工具，支持ipv6。国外很多网站都在使用 Cloudflare CDN，但分配给中国访客的 IP 并不友好。虽然 Cloudflare 公开了所有 IP 段 ，但想要在这么多 IP 中找到适合自己的，怕是要累死，所以就有了这个软件。该软件可以测试 Cloudflare CDN 延迟和速度，获取最快 IP (IPv4+IPv6)。\n项目地址 GitHub：https://github.com/XIU2/CloudflareSpeedTest","title":"CloudflareSpeedTest：CF节点测速工具"},{"content":"安装Docker 使用官方源安装（国内直接访问较慢）：\ncurl -fsSL https://get.docker.com | bash 使用阿里源安装：\ncurl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun 使用中国区Azure源安装：\ncurl -fsSL https://get.docker.com | bash -s docker --mirror AzureChinaCloud 设置开机自启：\nsystemctl enable docker 启动Docker：\nsystemctl start docker 一键安装最新版Docker Compose：\nCOMPOSE_VERSION=`git ls-remote https://github.com/docker/compose | grep refs/tags | grep -oP \u0026#34;[0-9]+\\.[0-9][0-9]+\\.[0-9]+$\u0026#34; | sort --version-sort | tail -n 1` sh -c \u0026#34;curl -L https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` \u0026gt; /usr/local/bin/docker-compose\u0026#34; chmod +x /usr/local/bin/docker-compose 配置国内镜像源 mkdir -p /etc/docker tee /etc/docker/daemon.json \u0026lt;\u0026lt;-\u0026#39;EOF\u0026#39; { \u0026#34;registry-mirrors\u0026#34;: [ \u0026#34;https://0b27f0a81a00f3560fbdc00ddd2f99e0.mirror.swr.myhuaweicloud.com\u0026#34;, \u0026#34;https://ypzju6vq.mirror.aliyuncs.com\u0026#34;, \u0026#34;https://registry.docker-cn.com\u0026#34;, \u0026#34;http://hub-mirror.c.163.com\u0026#34;, \u0026#34;https://docker.mirrors.ustc.edu.cn\u0026#34; ] } EOF systemctl daemon-reload systemctl restart docker 参考：https://www.hostloc.com/thread-800586-1-1.html\n","permalink":"https://renzhn.github.io/posts/install-docker/","summary":"安装Docker 使用官方源安装（国内直接访问较慢）：\ncurl -fsSL https://get.docker.com | bash 使用阿里源安装：\ncurl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun 使用中国区Azure源安装：\ncurl -fsSL https://get.docker.com | bash -s docker --mirror AzureChinaCloud 设置开机自启：\nsystemctl enable docker 启动Docker：\nsystemctl start docker 一键安装最新版Docker Compose：\nCOMPOSE_VERSION=`git ls-remote https://github.com/docker/compose | grep refs/tags | grep -oP \u0026#34;[0-9]+\\.[0-9][0-9]+\\.[0-9]+$\u0026#34; | sort --version-sort | tail -n 1` sh -c \u0026#34;curl -L https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` \u0026gt; /usr/local/bin/docker-compose\u0026#34; chmod +x /usr/local/bin/docker-compose 配置国内镜像源 mkdir -p /etc/docker tee /etc/docker/daemon.","title":"国内用户一键安装Docker并配置镜像源"},{"content":"SeedBox即种子盒子，是PT党专门用来刷数据的神器，一般由独立服务器或VPS搭建而成。\n由于国内家用宽带往往没有公网IP，上传带宽又有限，所以很多人选择用SeedBox做种上传，可以说是刷PT神器。不过直接租个盒子，价格较高，于是可以租个VPS来搭建一个盒子。\nVPS初始状态下为纯净系统，需要安装各种软件才能使用。本文介绍了三种非常好用SeedBox脚本项目，每个项目都提供了一键安装脚本，可以方便迅速地搭建起来SeedBox环境。\n购买VPS 由于刷PT往往需要储存大量的文件，建议购买一台大盘鸡。\nVPS的购买推荐可以参考这篇，如果用BuyVM家VPS的话推荐使用挂载块存储的方式。预算高的话可以租Hetzner的独立服务器。\n 如果你还没有购买Seedbox服务器的话，可以考虑一下Servarica服务器。他们的特价VPS套餐提供3核CPU, 3 GB内存，以及3 TB的储存空间，采用KVM虚拟化，是非常理想的SeedBox服务器, 价格仅需$10每月。\n如果你没有那么大的硬盘需求，且网络要求不是特别高的话，可以考虑Hostsolutions.ro罗马尼亚大盘鸡。罗马尼亚的版权保护较为宽松，他们家1核/2 GB内存/1 TB储存空间的KVM机器仅需40欧元一年。\n Swizzin Swizzin是一个轻量级、模块化的SeedBox解决方案，可以安装在Debian 9/10或Ubuntu 16.04/18.04/20.04上。QuickBox的软件包已经被移植过来，包括Web控制面板。\nSwizzin可以安装如下的组件：\n PT下载：qBittorrent, rtorrent/rutorrent, flood, Transmission, Deluge 影音播放分享：Plex, Emby, ffmpeg 同步：rclone, btsync, syncthing 其他影音相关：bazarr, headphones, jackett, lidarr, quassel, sickchill, sonarr, subsonic, ombi, 等等…… 资源获取：Couchpotato, rapidleech, sickgear, 等等…… 文件管理：shellinabox, filebrowser, vsftpd, 等等…… 网盘：Nextcloud Usenet: nzbget, nzbhydra, 等等…… Linux桌面环境：X2Go 挖矿：xmar-stak (请不要在VPS上挖矿，除非是独享CPU类型的VPS，否则可能被主机商封禁) 聊天室：ZNC, the Lounge Web服务器：Nginx, LEMP (Webmin全家桶), Let’s Encrypt  项目地址 GitHub: https://github.com/swizzin/swizzin\n支持的操作系统  Debian 9/10 Ubuntu 16.04/18.04/20.04  一键安装脚本 wget\nbash \u0026lt;(wget -qO - git.io/swizzin) \u0026amp;\u0026amp; . ~/.bashrc curl\nbash \u0026lt;(curl -sL git.io/swizzin) \u0026amp;\u0026amp; . ~/.bashrc 请注意，如果你运行的是Ubuntu，并且选择通过sudo来运行初始设置，你应该包含-H参数，以确保你的主目录在sudo启动时被修改为/root。安装程序会帮你处理好这个问题，这应该是你在运行swizzin命令之前唯一需要指定sudo -H的时候。\n例子：\nsudo -H su -c \u0026#39;bash \u0026lt;(wget -qO - git.io/swizzin) \u0026amp;\u0026amp; . ~/.bashrc\u0026#39; Inexistence 一个专为国人用户设计的SeedBox脚本，专门针对中国用户优化。\n项目地址 GitHub: https://github.com/Aniverse/inexistence\n脚本说明  本脚本只支持 x86_64 (amd64) 架构，其他架构都不支持。 本脚本只在独服和 KVM 虚拟化的 VPS 下测试，OpenVZ、Xen 等其他虚拟化架构仍可以尝试使用，但不保证没问题 本脚本目前支持 Debian 9/10, Ubuntu 16.04/18.04. 推荐使用 Debian 10 或 Ubuntu 18.04 本文的使用说明中的图片是一两年前的，与当前脚本存在较大出入（但文字内容是及时更新的） 建议重装完系统后使用此脚本，非全新安装的情况下（比如你先跑了个其他盒子脚本再跑这个）不确定因素太多容易翻车 目前没有简单易用的卸载方法。如果你有卸载的需求，使用前请三思  使用方法 如果你是新手，对很多选项不甚了解，直接用这个就完事了（账号密码部分替换一下）：\nbash \u0026lt;(wget --no-check-certificate -qO- https://github.com/Aniverse/inexistence/raw/master/inexistence.sh) \\ -y --tweaks --bbr --rclone --no-system-upgrade --flexget --tr-deb --filebrowser \\ --de 1.3.15 --rt 0.9.8 --qb 4.1.9 -u 这十二个字换成你的用户名 -p 这十个字换成你的密码 如果你需要自定义安装选项：\nbash \u0026lt;(wget --no-check-certificate -qO- https://github.com/Aniverse/inexistence/raw/master/inexistence.sh) 短命令（就是命令长度短一些，其他方面和上边那个没任何区别）\nbash \u0026lt;(wget -qO- https://git.io/abcde) QuickBox 该项目是 QuickBox 社区版的 mod. 主要目的是创建一个轻量级的 QuickBox 套件。大部分 QuickBox 社区版的功能都将被保留，但是只有最为常用的第三方软件会被加入这个项目。同时这个项目会提供一些预编译的 BT 客户端来减少安装时间，同时降低对 CPU 的要求。大多数的软件会以模块的形式存在，QuickBox 面板不再依赖 ruTorrent，可以自由选择各种客户端，这也是该项目称为 Lite 的原因。配置自动化工具，可以实现自动下载种子完成后自动删除，可谓是解放了刷子们的双手。\n项目地址 GitHub: https://github.com/amefs/quickbox-lite\nARM版: https://github.com/amefs/quickbox-arm\n主要特性  图形化的安装界面 (目前支持中英双语) 使用 Nginx 替代 Apache 模块化安装 支持最新的 Debian 系系统 最新的软件支持 (包含预编译的 deb 安装包)  安装项目 你需要首先以 root 身份登录\nTUI安装模式 运行以下指令来抓取最新的代码 \u0026hellip;\napt-get -yqq update; apt-get -yqq upgrade; apt-get -yqq install git lsb-release dos2unix; \\ git clone https://github.com/amefs/quickbox-lite.git /etc/QuickBox; \\ dos2unix /etc/QuickBox/setup.sh; \\ bash /etc/QuickBox/setup.sh 如何直接安装开发者模式?\n在抓取源码时使用如下指令 \u0026hellip;\nmkdir /install/ \u0026amp;\u0026amp; touch /install/.developer.lock; \\ apt-get -yqq update; apt-get -yqq upgrade; apt-get -yqq install git lsb-release dos2unix; \\ git clone --branch \u0026#34;development\u0026#34; https://github.com/amefs/quickbox-lite.git /etc/QuickBox; \\ dos2unix /etc/QuickBox/setup.sh; \\ bash /etc/QuickBox/setup.sh 使用一键安装模式 从 1.3.3 版本开始，可以使用一键安装:\nbash \u0026lt;(wget -qO- https://git.io/qbox-lite -o /dev/null) COMMAND 如何直接安装开发者模式?\nbash \u0026lt;(wget -qO- https://git.io/qbox-lite -o /dev/null) --dev COMMAND 目前可以使用以下参数:\nQuickBox Lite Setup Script Usage: bash setup.sh -u username -p password [OPTS] Options: NOTE: * is required anyway -H, --hostname \u0026lt;hostname\u0026gt; setup hostname, make no change by default -P, --port \u0026lt;1-65535\u0026gt; setup ssh service port, use 4747 by default -u, --username \u0026lt;username*\u0026gt; username is required here -p, --password \u0026lt;password*\u0026gt; your password is required here -r, --reboot reboot after installation finished (default no) -s, --source \u0026lt;us|au|cn|fr|de|jp|ru|uk|tuna\u0026gt; choose apt source (default unchange) -t, --theme \u0026lt;defaulted|smoked\u0026gt; choose a theme for your dashboard (default smoked) --lang \u0026lt;en|zh\u0026gt; choose a TUI language (default english) --with-log,no-log install with log to file or not (default yes) --with-ftp,--no-ftp install ftp or not (default yes) --ftp-ip \u0026lt;ip address\u0026gt; manually setup ftp ip --with-bbr,--no-bbr install bbr or not (default no) --with-cf use cloudflare instead of sourceforge --with-sf use sourceforge --with-osdn use osdn(jp) instead of sourceforge --with-APPNAME install an application Available applications: rtorrent | rutorrent | flood | transmission | qbittorrent deluge | mktorrent | ffmpeg | filebrowser | linuxrar -h, --help display this help and exit 用户名和密码是必须填写的参数，否则仍然会启动 TUI 安装界面。其他可选参数的功能与 TUI 安装界面相同。下面是一个使用示例：\nbash \u0026lt;(wget -qO- https://git.io/qbox-lite -o /dev/null) -u demouser -p demo123456 --with-ffmpeg -P 1234 --with-bbr --with-deluge --with-mktorrent --with-linuxrar --with-cf --hostname vmserver --reboot 这段代码的意思是: 用户名为 demouser，密码为 demo123456，ssh 端口修改为1234，安装 BBR，deluge，mktorrent，linuxrar，使用 Cloudflare 的预编译包镜像源，hostname 修改为 vmserver，安装完成后自动重启。\n已经安装 QuickBox 希望切换到开发者模式? 运行如下指令以切换分支 \u0026hellip;\nmkdir /install/ \u0026amp;\u0026amp; touch /install/.developer.lock; \\ sudo box update quickbox 默认安装的功能  pureftp - vsftp (FTP客户端) SSH Server Web 控制台 (Shellinabox) QuickBox 面板  可选的软件 安装时可选的软件   rTorrent (0.9.4-0.9.8)\n ruTorrent flood    Transmission (2.94)\n  qBittorrent (4.2.5)\n  Deluge (1.3.15, 2.0.3)\n  mktorrent (可以使用 createtorrent 在命令行中使用表单快速创建种子)\n  FFmpeg\n  Linux RAR\n  File Browser\n  BBR\n  面板中可选的软件  Autodl-irssi BTSync CIFS FlexGet (2.x 和 3.x 版本) Netdata NFS noVNC OpenVPN Plex Syncthing x2Go  命令行中可选的软件  autoremove-torrents Denyhosts Fail2ban Let\u0026rsquo;s Encrypt ZNC  ","permalink":"https://renzhn.github.io/posts/seedbox/","summary":"SeedBox即种子盒子，是PT党专门用来刷数据的神器，一般由独立服务器或VPS搭建而成。\n由于国内家用宽带往往没有公网IP，上传带宽又有限，所以很多人选择用SeedBox做种上传，可以说是刷PT神器。不过直接租个盒子，价格较高，于是可以租个VPS来搭建一个盒子。\nVPS初始状态下为纯净系统，需要安装各种软件才能使用。本文介绍了三种非常好用SeedBox脚本项目，每个项目都提供了一键安装脚本，可以方便迅速地搭建起来SeedBox环境。\n购买VPS 由于刷PT往往需要储存大量的文件，建议购买一台大盘鸡。\nVPS的购买推荐可以参考这篇，如果用BuyVM家VPS的话推荐使用挂载块存储的方式。预算高的话可以租Hetzner的独立服务器。\n 如果你还没有购买Seedbox服务器的话，可以考虑一下Servarica服务器。他们的特价VPS套餐提供3核CPU, 3 GB内存，以及3 TB的储存空间，采用KVM虚拟化，是非常理想的SeedBox服务器, 价格仅需$10每月。\n如果你没有那么大的硬盘需求，且网络要求不是特别高的话，可以考虑Hostsolutions.ro罗马尼亚大盘鸡。罗马尼亚的版权保护较为宽松，他们家1核/2 GB内存/1 TB储存空间的KVM机器仅需40欧元一年。\n Swizzin Swizzin是一个轻量级、模块化的SeedBox解决方案，可以安装在Debian 9/10或Ubuntu 16.04/18.04/20.04上。QuickBox的软件包已经被移植过来，包括Web控制面板。\nSwizzin可以安装如下的组件：\n PT下载：qBittorrent, rtorrent/rutorrent, flood, Transmission, Deluge 影音播放分享：Plex, Emby, ffmpeg 同步：rclone, btsync, syncthing 其他影音相关：bazarr, headphones, jackett, lidarr, quassel, sickchill, sonarr, subsonic, ombi, 等等…… 资源获取：Couchpotato, rapidleech, sickgear, 等等…… 文件管理：shellinabox, filebrowser, vsftpd, 等等…… 网盘：Nextcloud Usenet: nzbget, nzbhydra, 等等…… Linux桌面环境：X2Go 挖矿：xmar-stak (请不要在VPS上挖矿，除非是独享CPU类型的VPS，否则可能被主机商封禁) 聊天室：ZNC, the Lounge Web服务器：Nginx, LEMP (Webmin全家桶), Let’s Encrypt  项目地址 GitHub: https://github.","title":"用VPS搭建SeedBox一键脚本集合"},{"content":"介绍 Glances 是一个跨平台的系统监控工具，支持GNU/Linux, BSD, Mac OS and Windows，可以作为top/htop的替代。由 Python 语言编写，使用 Python 的 psutil 库来抓取系统数据。可以监控 CPU、负载均衡、内存、网络设备、磁盘 I/O、进程和文件系统使用等。\nGlances 既可以在终端界面显示，也可以通过Web界面展示系统监控信息。并且这两种显示方式都可以根据窗口大小自动调整界面元素。\nGlances工具可以监控的系统信息如下：\n CPU使用率 内存使用率 内核统计信息和运行队列信息 磁盘I/O速度、传输和读/写比率 磁盘适配器 网络I/O速度、传输和读/写比率 页面监控 进程监控-消耗资源最多的进程 计算机信息和系统资源  项目地址：\nGitHub：https://github.com/nicolargo/glances\n安装 Glances的安装方式有：\n 官方一键脚本 pip命令安装 软件源安装 Docker安装  最简便的办法，使用 Glances 开发者提供的一键安装脚本：\ncurl -L https://bit.ly/glances | bash 或者\nwget -O- https://bit.ly/glances | bash Glances 一般已集成到大多数 Linux 发行版的官方软件源中，可以直接使用系统的包管理器（如 apt-get、yum）安装：\n# Debian/Ubuntu sudo apt install -y glances # CentOS sudo yum install epel* -yyum -y install glances 当然也可以使用 Python 的包管理器（pip 命令）进行安装：\npip install glances 温度监控工具安装\nlm_sensors 的软件可以帮助我们来监控主板、CPU 的工作电压、风扇转速、温度等数据。这些数据我们通常在主板的 BIOS 也可以看到。当我们可以在机器运行的时候通过 lm_sensors 随时来监测着 CPU 的温度变化，可以预防呵保护因为 CPU 过热而会烧掉。lm_sensors 软件监测到的数据可以被 Glances 调用并且显示_。_\n# Debian/Ubuntu sudo apt install -y lm-sensors # CentOS sudo yum -y install lm_sensors 使用方法 Glances 有 4 种颜色标记，分别表示不同的紧急程度：\n 绿色：OK 蓝色：CAREFUL 紫色：WARNING 红色：CRITICAL   绿色表示性能良好；（此时 CPU 使用率、磁盘空间使用率和内存使用率低于 50%，系统负载低于 0.7）。\n蓝色表示系统性能有一些小问题，用户应当开始关注系统性能；（此时 CPU 使用率、磁盘空间使用率和内存使用率在 50%-70% 之间，系统负载在 0.7-1 之间）。\n品红表示性能报警，应当采取措施比如备份数据；（此时 CPU 使用率、磁盘空间使用率和内存使用率在 70%-90% 之间，，系统负载在 1-5 之间）。\n红色表示性能问题严重，可能宕机；（此时 CPU 使用率、磁盘空间使用率和内存使用率在大于 90%，系统负载大于 5）。\n Glances 使用方法\nGlances 作为一个命令行工具包括如下参数选项：\n -b：显示网络连接速度 Byte/ 秒 -B @IP|host ：绑定服务器端 IP 地址或者主机名称 -c @IP|host：连接 Glances 服务器端 -C file：设置配置文件默认是 /etc/glances/glances.conf -d：关闭磁盘 I/O 模块 -e：显示传感器温度 -f file：设置输出文件（格式是 HTML 或者 CSV） -m：关闭挂载的磁盘模块 -n：关闭网络模块 -p PORT：设置运行端口默认是 61209 -P password：设置客户端 / 服务器密码 -s：设置 Glances 运行模式为服务器 -t sec：设置屏幕刷新的时间间隔，单位为秒，默认值为 2 秒，数值范围：1~32767 -h : 显示帮助信息 -v : 显示版本信息  Glances 工作界面的说明\n在图中的上部是 CPU 、Load（负载）、Mem（内存使用）、 Swap（交换分区）的使用情况。在图中的中上部是网络接口、Processes（进程）的使用情况。通常包括如下字段：\n VIRT: 虚拟内存大小 RES: 进程占用的物理内存值 %CPU：该进程占用的 CPU 使用率 %MEM：该进程占用的物理内存和总内存的百分比 PID: 进程 ID 号 USER: 进程所有者的用户名 TIME+: 该进程启动后占用的总的 CPU 时间 IO_R 和 IO_W: 进程的读写 I/O 速率 NAME: 进程名称 NI: 进程优先级 S: 进程状态，其中 S 表示休眠，R 表示正在运行，Z 表示僵死状态。  另外 Glances 还可以使用交互式的方式运行该工具，用户可以使用如下快捷键：\n h：显示帮助信息 q：离开程序退出 c：按照 CPU 实时负载对系统进程进行排序 m：按照内存使用状况对系统进程排序 i：按照 I/O 使用状况对系统进程排序 p：按照进程名称排序 d：显示磁盘读写状况 w：删除日志文件 l：显示日志 s：显示传感器信息 f：显示系统信息 1：轮流显示每个 CPU 内核的使用情况  C/S远程监控模式 Glances 还支持C/S模式监控，被监控机运行服务端，监控端运行客户端既可以实现远程监控，两端都安装 Glances 服务即可。\n服务端启动\n服务端使用的端口默认是 61209，启动命令如下：\nglances -s -B 192.168.1.253 glances server is running on 192.168.1.253:61209 客户端访问\nglances -c 192.168.1.253 也可以使用用户名与密码进行访问，默认用户名是glances，如果想更改的话可以使用--username参数进行更换。使用--password参数可以指定访问密码。\n客户端连接方式如下：\nglances -c 192.168.1.253 --username test WebServer 浏览器模式 在 Glances 的 WebServer 模式下，客户端只通过浏览器访问就可以获取远程服务器的运行状态。只需要安装 Python 的 Bottle 模块：\npip install bottle 安装成功后，使用glances -w命令即可开启 WebServer 模式。 客户端使用浏览器访问http://SERVER_IP:61208/进入监控界面。\n其它应用 导出数据为CSV格式，命令如下：\nglances --export-csv /tmp/1.csv Glances还可以与InfluxDB、Grafana这些开源软件一起配合，构建成一个监控平台，和其它监控软件一样，能形成实时化、图表化的数据显示。\n","permalink":"https://renzhn.github.io/posts/glances/","summary":"介绍 Glances 是一个跨平台的系统监控工具，支持GNU/Linux, BSD, Mac OS and Windows，可以作为top/htop的替代。由 Python 语言编写，使用 Python 的 psutil 库来抓取系统数据。可以监控 CPU、负载均衡、内存、网络设备、磁盘 I/O、进程和文件系统使用等。\nGlances 既可以在终端界面显示，也可以通过Web界面展示系统监控信息。并且这两种显示方式都可以根据窗口大小自动调整界面元素。\nGlances工具可以监控的系统信息如下：\n CPU使用率 内存使用率 内核统计信息和运行队列信息 磁盘I/O速度、传输和读/写比率 磁盘适配器 网络I/O速度、传输和读/写比率 页面监控 进程监控-消耗资源最多的进程 计算机信息和系统资源  项目地址：\nGitHub：https://github.com/nicolargo/glances\n安装 Glances的安装方式有：\n 官方一键脚本 pip命令安装 软件源安装 Docker安装  最简便的办法，使用 Glances 开发者提供的一键安装脚本：\ncurl -L https://bit.ly/glances | bash 或者\nwget -O- https://bit.ly/glances | bash Glances 一般已集成到大多数 Linux 发行版的官方软件源中，可以直接使用系统的包管理器（如 apt-get、yum）安装：\n# Debian/Ubuntu sudo apt install -y glances # CentOS sudo yum install epel* -yyum -y install glances 当然也可以使用 Python 的包管理器（pip 命令）进行安装：","title":"Glances：跨平台的系统性能监控利器"},{"content":"什么是 Nali dig、nslookup、traceroute 等都是非常实用的网络调试工具，Nali 是一个可以自动解析这些工具 stdout 中的 IP 并附上所属 ISP 和地理信息，对这些已是瑞士军刀般的工具可谓如虎添翼。\nNali 取自中文「哪里」。Nali 一开始是数年前由 surfchen 用 C 和 Perl 写成的小工具（C 用于解析纯真 IP 数据库，Perl 用于解析 stdout）。\n今天给大家介绍两款新的基于 Node.js 语言和 Go语言开发的，且具有更多高级功能的新一代 Nali。\nNali CLI（Node.js版本） Nali CLI 采用 Node.js 开发，在安装之前，你的环境必须已经具备 Node.js 环境。\n项目地址：\n GitHub: https://github.com/sukkaw/nali-cli 官网：https://nali.skk.moe  安装 对于环境中有 Node.js 的，可以直接通过 NPM 和 Yarn 安装：\n# NPM $ npm i nali-cli -g # Yarn $ yarn global add nali-cli Nali CLI 也有预编译好的供 macOS x64 和 Linux x64 的二进制文件，可以在 GitHub Repo 中的 bin目录 中下载。\n首次运行 Nali CLI 时会自动下载所需的 qqwry.dat 到 $HOME/.config/nali-cli/ 目录下。\n常用命令行语法 $ nali --help Usage: nali \u0026lt;command\u0026gt; [options] Options: -v, --version 版本信息 -h, --help output usage information Commands: parse 解析 stdin 或参数中的 IP 信息 (默认) update 更新 IP 库 help [cmd] display help for [cmd] $ nali update --help Usage: update [options] 更新 IP 库 (qqwry.dat) Options: -r, --remote 获取最新 IP 库版本信息 -f, --force 强制更新 IP 库 -y, --yes 直接更新 IP 库 -h, --help output usage information 使用 Nali CLI 支持从传入的参数中解析 IP：\n$ nali 11.4.5.14 11.4.5.14 [美国 俄亥俄州哥伦布市 DoD 网络信息中心] $ nali Cloudflare 1.0.0.1 1.1.1.1 Cloudflare 1.1.1.1 [美国 APNIC\u0026amp;CloudFlare 公共 DNS 服务器] 1.0.0.1 [美国 APNIC\u0026amp;CloudFlare 公共 DNS 服务器] $ nali 114.514.191.9 114.5.1.4 114.514.191.8 114.5.1.4 [印度尼西亚] 除此以外，Nali CLI 内置了以下几个常用工具：\n nali-dig nali-nslookup nali-ping nali-tracepath nali-traceroute   注意，上述工具只是 Wrapper，使用时仍然需要安装原始程序。比如要使用 nali-dig 和 nali-nslookup 需要先安装 Bind (dnsutils)。\n $ nali-nslookup nali.skk.moe 1.1.1.1 Server: 1.1.1.1 [美国 APNIC\u0026amp;CloudFlare 公共 DNS 服务器] Address: 1.1.1.1 [美国 APNIC\u0026amp;CloudFlare 公共 DNS 服务器]#53 Non-authoritative answer: Name: nali.skk.moe Address: 104.18.100.28 [美国 CloudFlare 公司 CDN 节点] Name: nali.skk.moe Address: 104.18.101.28 [美国 CloudFlare 公司 CDN 节点] Name: nali.skk.moe Address: 2606:4700::6812:641c Name: nali.skk.moe Address: 2606:4700::6812:651c Nali CLI 还支持从外部的 stdin 中解析和查询 IP 信息，因此像 mtr 这类未被 Nali CLI 包装的工具也可以使用：\n# 这里以 dig 为例 $ dig nali.skk.moe @1.1.1.1 +short | nali 104.18.100.28 [美国 CloudFlare 公司 CDN 节点] 104.18.101.28 [美国 CloudFlare 公司 CDN 节点] 对于 mtr 等，还可以自行创建 nali-mtr 文件并添加到 PATH 中：\n#!/bin/sh  mtr $@ 2\u0026gt;\u0026amp;1 | nali 也可以直接在 .bashrc 或 .zshrc 中注册 nali-mtr：\nnali-mtr() { mtr $@ 2\u0026gt;\u0026amp;1 | nali } Nali CLI 也可以更新 qqwry.dat：\n$ nali upadte Nali（Go 版本） Nali（Go 版本）是在 Sukka 的 Nodejs 版本上进行改良的，它在原有功能的基础上增加了对 IPv6 的支持，并且增加了 Geoip2 数据库。\n项目地址：\nGitHub: https://github.com/zu1k/nali\n支持的功能  纯真 IPv4 离线数据库 ZX IPv6 离线数据库 Geoip2 城市数据库 (可选) IPIP 数据库 (可选) CDN 服务提供商查询 支持管道处理 支持交互式查询 同时支持 IPv4 和 IPv6 查询完全离线 全平台支持  安装  从源码安装  Nali 需要预先安装 Go. 安装后可以从源码安装软件:\n$ go get -u -v github.com/zu1k/nali 下载预编译的可执行程序（推荐）  直接从项目的 Release 页面下载预编译好的可执行程序，你只需要选择适合你系统和硬件架构的版本下载，解压后直接运行即可。\n常用命令语法 $ nali --help Usage: nali [flags] nali [command] Available Commands: cdn Query cdn service provider help Help about any command parse Query IP information update update chunzhen ip database Flags: -h, --help help for nali -t, --toggle Help message for toggle Use \u0026#34;nali [command] --help\u0026#34; for more information about a command. 使用 第一次使用时会需要点时间，因为要下载纯真和 CDN 相关数据库。\n$ nali 2020/08/20 17:37:14 文件不存在，尝试从网络获取最新纯真 IP 库 2020/08/20 17:37:32 已将最新的 纯真IP库 保存到本地: /Users/Mike/.nali/qqwry.dat 2020/08/20 17:37:32 文件不存在，尝试从网络获取最新ZX IPv6数据库 2020/08/20 17:37:33 已将最新的 ZX IPv6数据库 保存到本地: /Users/Mike/.nali/ipv6wry.db 2020/08/20 17:37:33 文件不存在，尝试从网络获取最新CDN数据库 2020/08/20 17:37:34 已将最新的 CDN数据库 保存到本地: /Users/Mike/.nali/cdn.json 查询一个 IP 的地理信息 $ nali 1.2.3.4 1.2.3.4 [澳大利亚 APNIC Debogon-prefix网络] # 或者使用管道 $ echo IP 6.6.6.6 | nali IP 6.6.6.6 [美国 亚利桑那州华楚卡堡市美国国防部网络中心] 同时查询多个IP的地理信息 $ nali 1.2.3.4 4.3.2.1 123.23.3.0 1.2.3.4 [澳大利亚 APNIC Debogon-prefix网络] 4.3.2.1 [美国 新泽西州纽瓦克市Level3Communications] 123.23.3.0 [越南 越南邮电集团公司] 交互式查询 使用 exit 或 quit 退出查询。\n$ nali 123.23.23.23 123.23.23.23 [越南 越南邮电集团公司] 1.0.0.1 1.0.0.1 [美国 APNIC\u0026amp;CloudFlare公共DNS服务器] 8.8.8.8 8.8.8.8 [美国 加利福尼亚州圣克拉拉县山景市谷歌公司DNS服务器] quit 与 dig 命令配合使用 需要你系统中已经安装好 dig 程序。\n$ dig nali.lgf.im +short | nali 104.28.2.115 [美国 CloudFlare公司CDN节点] 104.28.3.115 [美国 CloudFlare公司CDN节点] 172.67.135.48 [美国 CloudFlare节点] 与 nslookup 命令配合使用 需要你系统中已经安装好 nslookup 程序。\n$ nslookup nali.lgf.im 8.8.8.8 | nali Server: 8.8.8.8 [美国 加利福尼亚州圣克拉拉县山景市谷歌公司DNS服务器] Address: 8.8.8.8 [美国 加利福尼亚州圣克拉拉县山景市谷歌公司DNS服务器]#53 Non-authoritative answer: Name: nali.lgf.im Address: 104.28.3.115 [美国 CloudFlare公司CDN节点] Name: nali.lgf.im Address: 104.28.2.115 [美国 CloudFlare公司CDN节点] Name: nali.lgf.im Address: 172.67.135.48 [美国 CloudFlare节点] 与任意程序配合使用 因为 nali 支持管道处理，所以可以和任意程序配合使用。\n$ bash abc.sh | nali Nali 将在 IP 后面插入 IP 地理信息，CDN 域名后面插入 CDN 服务提供商信息。\n支持 IPv6 和 IPv4 用法完全相同。\n$ nslookup google.com | nali Server: 127.0.0.53 [局域网 IP] Address: 127.0.0.53 [局域网 IP]#53 Non-authoritative answer: Name: google.com Address: 216.58.211.110 [美国 Google全球边缘网络] Name: google.com Address: 2a00:1450:400e:809::200e [荷兰Amsterdam Google Inc. 服务器网段] 查询 CDN 服务提供商 因为 CDN 服务通常使用 CNAME 的域名解析方式，所以推荐与 nslookup 或者 dig 配合使用，在已经知道 CNAME 后可单独使用。\n只查询 CDN 服务提供商 $ nslookup www.gov.cn | nali cdn Server: 127.0.0.53 Address: 127.0.0.53#53 Non-authoritative answer: www.gov.cn canonical name = www.gov.cn.bsgslb.cn [白山云 CDN]. www.gov.cn.bsgslb.cn [白山云 CDN] canonical name = zgovweb.v.bsgslb.cn [白山云 CDN]. Name: zgovweb.v.bsgslb.cn [白山云 CDN] Address: 185.232.56.148 Name: zgovweb.v.bsgslb.cn [白山云 CDN] Address: 185.232.56.147 Name: zgovweb.v.bsgslb.cn [白山云 CDN] Address: 2001:428:6402:21b::6 Name: zgovweb.v.bsgslb.cn [白山云 CDN] Address: 2001:428:6402:21b::5 查询所有信息 $ nslookup www.gov.cn | nali Server: 127.0.0.53 [局域网 IP] Address: 127.0.0.53 [局域网 IP]#53 Non-authoritative answer: www.gov.cn canonical name = www.gov.cn.bsgslb.cn [白山云 CDN]. www.gov.cn.bsgslb.cn [白山云 CDN] canonical name = zgovweb.v.bsgslb.cn [白山云 CDN]. Name: zgovweb.v.bsgslb.cn [白山云 CDN] Address: 103.104.170.25 [新加坡 ] Name: zgovweb.v.bsgslb.cn [白山云 CDN] Address: 2001:428:6402:21b::5 [美国Louisiana州Monroe Qwest Communications Company, LLC (CenturyLink)] Name: zgovweb.v.bsgslb.cn [白山云 CDN] Address: 2001:428:6402:21b::6 [美国Louisiana州Monroe Qwest Communications Company, LLC (CenturyLink)] 单独使用 需要提前查询到 CNAME 域名\n$ nali cdn cdn.somecdncname.com 更新纯真数据库 $ nali update 2020/07/17 12:53:46 正在下载最新纯真 IP 库... 2020/07/17 12:54:05 已将最新的纯真 IP 库保存到本地 /root/.nali/qqwry.dat 使用自定义 IP 库 使用自定义 IP 库前，你需要设置环境变量：NALI_DB。目前支持的变量内容:\nGeoip2 [\u0026#39;geoip\u0026#39;, \u0026#39;geoip2\u0026#39;, \u0026#39;geo\u0026#39;] Chunzhen [\u0026#39;chunzhen\u0026#39;, \u0026#39;qqip\u0026#39;, \u0026#39;qqwry\u0026#39;] 使用三方 IP 库，需要手动提前下载相应的 IP 数据库。\n# Windows 平台 ## 使用geoip数据库 set NALI_DB=geoip ## 使用ipip数据库 set NALI_DB=ipip # Linux平台 ## 使用geoip数据库 export NALI_DB=geoip ## 使用ipip数据库 export NALI_DB=ipip Nali （C版本） 这个是由@surfchen于2009年发布的最早的C语言版本，需要自行编译安装，比较麻烦，已不推荐使用。\n相关链接\n  https://github.com/out0fmemory/nali\n  https://github.com/out0fmemory/nali/wiki/Nali\n  http://bbs.linuxtone.org/thread-4425-1-1.html\n  最新纯真IP数据库下载地址   直链下载地址（定时更新）\nhttps://github.com/out0fmemory/qqwry.dat/raw/master/qqwry_lastest.dat\n  项目地址\nhttps://github.com/out0fmemory/qqwry.dat\n  参考文档   https://blog.skk.moe/post/nali-cli\n  https://juejin.im/post/6854573212865560584\n  ","permalink":"https://renzhn.github.io/posts/nali/","summary":"什么是 Nali dig、nslookup、traceroute 等都是非常实用的网络调试工具，Nali 是一个可以自动解析这些工具 stdout 中的 IP 并附上所属 ISP 和地理信息，对这些已是瑞士军刀般的工具可谓如虎添翼。\nNali 取自中文「哪里」。Nali 一开始是数年前由 surfchen 用 C 和 Perl 写成的小工具（C 用于解析纯真 IP 数据库，Perl 用于解析 stdout）。\n今天给大家介绍两款新的基于 Node.js 语言和 Go语言开发的，且具有更多高级功能的新一代 Nali。\nNali CLI（Node.js版本） Nali CLI 采用 Node.js 开发，在安装之前，你的环境必须已经具备 Node.js 环境。\n项目地址：\n GitHub: https://github.com/sukkaw/nali-cli 官网：https://nali.skk.moe  安装 对于环境中有 Node.js 的，可以直接通过 NPM 和 Yarn 安装：\n# NPM $ npm i nali-cli -g # Yarn $ yarn global add nali-cli Nali CLI 也有预编译好的供 macOS x64 和 Linux x64 的二进制文件，可以在 GitHub Repo 中的 bin目录 中下载。","title":"Nali：一个离线查询 IP 地理信息和 CDN 提供商的终端利器"},{"content":"本脚本作者：Vicer, dansnow\n真·究极·一键重装脚本 支持重装的系统：\n Debian 9/10 Ubuntu 18.04/16.04 CentOS 6/7 自定义DD镜像  特性/优化：\n 自动获取IP地址、网关、子网掩码 自动判断网络环境，选择国内/外镜像，再也不用担心卡半天了 超级懒人一键化，无需复杂的命令 解决萌咖脚本中一些导致安装错误的问题 CentOS 7 镜像抛弃LVM，回归ext4，减少不稳定因素  使用方法非常简单：\nwget --no-check-certificate -O AutoReinstall.sh https://git.io/AutoReinstall.sh \u0026amp;\u0026amp; bash AutoReinstall.sh 简介 突破没有VNC，没有救援模式，内存比dd包小的限制。使用Debian Live CD中的busybox做中间媒介，经过复杂的处理，使本机的网络参数传进Windows操作系统中，即使没有DHCP能够让Windows获取网络参数，也能让Windows操作系统在开机的第一时间能够连通网络。\n允许使用的环境 1.独立服务器\n2.虚拟化：KVM/XEN/VMWARE/Hyper-V等（注意：不支持Docker、OpenVZ、LXC等）\n系统需求 1、Debian/Ubuntu/CentOS系统（由GRUB引导）\n2、wget用来下载文件，获取公网IP\n3、ip获取网关，掩码等\n4、sed、awk、grep处理文本\n5、VNC远程桌面(可选)\n6、无DHCP时额外需求: iconv\n# Debian/Ubuntu # 一般自带 # RedHat/CentOS yum install glibc-common 使用教程 注意事项：\nVicer脚本目前不支持重装为CentOS 7系统，支持CentOS 6.9以下版本。\n重装的系统源自官方发行版。\n安装过程全自动进行，无需VNC操作，无需进入救援模式。\n系统安装完成后的默认用户名为root，默认密码为:MoeClub.org\n重装为CentOS 6.9：\n# CentOS 6.9 64位： bash \u0026lt;(wget --no-check-certificate -qO- \u0026#39;https://moeclub.org/attachment/LinuxShell/InstallNET.sh\u0026#39;) -c 6.9 -v 64 -a # CentOS 6.9 32位： bash \u0026lt;(wget --no-check-certificate -qO- \u0026#39;https://moeclub.org/attachment/LinuxShell/InstallNET.sh\u0026#39;) -c 6.9 -v 32 -a 重装为Debian： 以下命令中的 -d 后面为Debian版本号，-v 后面为64位/32位，可根据需求进行替换。\n# Debian 8 64位： bash \u0026lt;(wget --no-check-certificate -qO- \u0026#39;https://moeclub.org/attachment/LinuxShell/InstallNET.sh\u0026#39;) -d 8 -v 64 -a # Debian 9 64位： bash \u0026lt;(wget --no-check-certificate -qO- \u0026#39;https://moeclub.org/attachment/LinuxShell/InstallNET.sh\u0026#39;) -d 9 -v 64 -a # Debian 10 64位： bash \u0026lt;(wget --no-check-certificate -qO- \u0026#39;https://moeclub.org/attachment/LinuxShell/InstallNET.sh\u0026#39;) -d 10 -v 64 -a 重装为Ubuntu： 以下命令中的 -u 后面为Ubuntu版本号，-v 后面为64位/32位，可根据需求进行替换。\n# Ubuntu 12.04 64位： bash \u0026lt;(wget --no-check-certificate -qO- \u0026#39;https://moeclub.org/attachment/LinuxShell/InstallNET.sh\u0026#39;) -u 12.04 -v 64 -a # Ubuntu 14.04 64位： bash \u0026lt;(wget --no-check-certificate -qO- \u0026#39;https://moeclub.org/attachment/LinuxShell/InstallNET.sh\u0026#39;) -u 14.04 -v 64 -a # Ubuntu 16.04 64位： bash \u0026lt;(wget --no-check-certificate -qO- \u0026#39;https://moeclub.org/attachment/LinuxShell/InstallNET.sh\u0026#39;) -u 16.04 -v 64 -a # Ubuntu 18.04 64位： bash \u0026lt;(wget --no-check-certificate -qO- \u0026#39;https://moeclub.org/attachment/LinuxShell/InstallNET.sh\u0026#39;) -u 18.04 -v 64 -a 安装其他DD包（比如Windows） 1、需要定制dd包\n默认Administrator账户登录（可选） 默认开启远程桌面 适当的调整防火墙（可选） 2、需要相关的虚拟化驱动，VirtIO驱动，XEN驱动。 3、dd包解压后的体积不能超过机器第一块硬盘的最大容积\nwget --no-check-certificate -qO DebianNET.sh \u0026#39;https://moeclub.org/attachment/LinuxShell/DebianNET.sh\u0026#39; \u0026amp;\u0026amp; bash DebianNET.sh -dd \u0026#39;[Windows dd包直连地址]\u0026#39; 以上系统如果在安装时需要指定网络参数（非dhcp，用于下载相关环境），可以按下面命令执行，将命令当中的X.X.X.X替换为自己的网络参数。\n–ip-addr :IP Address//IP地址\n–ip-mask :Netmask //子网掩码\n–ip-gate :Gateway //网关\nwget --no-check-certificate -qO InstallNET.sh \u0026#39;https://raw.githubusercontent.com/wn789/xitong/master/InstallNET.sh\u0026#39; \u0026amp;\u0026amp; bash InstallNET.sh --ip-addr X.X.X.X --ip-mask X.X.X.X --ip-gate X.X.X.X -dd \u0026#39;https://moeclub.org/get-win7embx86-auto\u0026#39; 附可用的dd包  由www.moerats.com提供的Vicer的dd包备用地址（用于KVM，Hyper-V，其他自测，）\n在你的机器上全新安装，如果你有VNC，可以看到全部过程。\nWindows Embedded Standard 7(Thin PC)作为底包：\nhttps://moeclub.org/get-win7embx86-auto\n该包只添加了VirtIO驱动,理论上仅能在KVM，Hyper-V构架下正常运行。\n如需在其他虚拟化构架下运行，请自行添加相关虚拟化驱动。\n备用地址：\nhttps://down.moerats.com/Windows/win7embx86-auto.gz\nWindows Embedded 8.1 Industry Pro x64 (2.87G;KVM;XEN;Hyper-V;未激活)\nhttps://down.moerats.com/Windows/win8embx64-auto.gz\n远程登陆账号为: Administrator\n远程登陆密码为: Vicer\n如果因此违反了TOS，萌咖和本博主不负任何责任。\n Windows Server 2008/2012R2：\n http://down.80host.com/iso/dd/WS2008R2Enterprise-Joodle-Template.gz\nhttp://down.80host.com/iso/dd/Windows2012R2-Joodle-Template.gz\nUsername:Administrator\nPassword:Password147\nLaiboke.com制作的中文版2012R2\nhttp://down.80host.com/iso/dd/Win2012R2ZW.gz\nUsername:Administrator\nPassword:Laiboke.com\n 安装完成后建议立刻修改密码。\n参考链接 https://www.moerats.com/archives/421/\nhttps://github.com/veip007/dd\nhttps://www.hostloc.com/thread-645870-1-1.html\n","permalink":"https://renzhn.github.io/posts/vps-dd/","summary":"本脚本作者：Vicer, dansnow\n真·究极·一键重装脚本 支持重装的系统：\n Debian 9/10 Ubuntu 18.04/16.04 CentOS 6/7 自定义DD镜像  特性/优化：\n 自动获取IP地址、网关、子网掩码 自动判断网络环境，选择国内/外镜像，再也不用担心卡半天了 超级懒人一键化，无需复杂的命令 解决萌咖脚本中一些导致安装错误的问题 CentOS 7 镜像抛弃LVM，回归ext4，减少不稳定因素  使用方法非常简单：\nwget --no-check-certificate -O AutoReinstall.sh https://git.io/AutoReinstall.sh \u0026amp;\u0026amp; bash AutoReinstall.sh 简介 突破没有VNC，没有救援模式，内存比dd包小的限制。使用Debian Live CD中的busybox做中间媒介，经过复杂的处理，使本机的网络参数传进Windows操作系统中，即使没有DHCP能够让Windows获取网络参数，也能让Windows操作系统在开机的第一时间能够连通网络。\n允许使用的环境 1.独立服务器\n2.虚拟化：KVM/XEN/VMWARE/Hyper-V等（注意：不支持Docker、OpenVZ、LXC等）\n系统需求 1、Debian/Ubuntu/CentOS系统（由GRUB引导）\n2、wget用来下载文件，获取公网IP\n3、ip获取网关，掩码等\n4、sed、awk、grep处理文本\n5、VNC远程桌面(可选)\n6、无DHCP时额外需求: iconv\n# Debian/Ubuntu # 一般自带 # RedHat/CentOS yum install glibc-common 使用教程 注意事项：\nVicer脚本目前不支持重装为CentOS 7系统，支持CentOS 6.9以下版本。\n重装的系统源自官方发行版。\n安装过程全自动进行，无需VNC操作，无需进入救援模式。\n系统安装完成后的默认用户名为root，默认密码为:MoeClub.org\n重装为CentOS 6.9：\n# CentOS 6.9 64位： bash \u0026lt;(wget --no-check-certificate -qO- \u0026#39;https://moeclub.","title":"Linux VPS无限制一键全自动DD安装Windows/CentOS/Debian/Ubuntu脚本"},{"content":"前言 推荐一个Docker镜像，用来一键搭建桌面环境（包含Chrome和Firefox），支持 VNC、RDP 协议，也可用浏览器（noVNC）直接打开。\n这样可以在VPS或者群晖很方便地搭建一个桌面环境，实现远程桌面连接！\n安装Docker 使用官方一键安装脚本：\ncurl -Lv get.docker.com|bash\n使用方法 输入命令：\ndocker run -d -p 3389:3389 -p 5901:5901 -p 6901:6901 soff/tiny-remote-desktop\n noVNC，浏览器直接访问：http://\u0026lt;IP\u0026gt;:6901，密码 vncpassword VNC：\u0026lt;IP\u0026gt;:5901，密码 vncpassword RDP：\u0026lt;IP\u0026gt;:3389，用户名 user 密码 password  说明：这个镜像使用的是非常小巧的Fluxbox桌面环境，进入桌面后右键点击桌面空白处即可弹出菜单。\n镜像详细说明：https://hub.docker.com/r/soff/tiny-remote-desktop\n其他类似镜像 https://hub.docker.com/r/consol/centos-xfce-vnc\nhttps://hub.docker.com/r/soff/ubuntu-xfce-vnc\nhttps://github.com/fcwu/docker-ubuntu-vnc-desktop\n","permalink":"https://renzhn.github.io/posts/vps-remote-de/","summary":"前言 推荐一个Docker镜像，用来一键搭建桌面环境（包含Chrome和Firefox），支持 VNC、RDP 协议，也可用浏览器（noVNC）直接打开。\n这样可以在VPS或者群晖很方便地搭建一个桌面环境，实现远程桌面连接！\n安装Docker 使用官方一键安装脚本：\ncurl -Lv get.docker.com|bash\n使用方法 输入命令：\ndocker run -d -p 3389:3389 -p 5901:5901 -p 6901:6901 soff/tiny-remote-desktop\n noVNC，浏览器直接访问：http://\u0026lt;IP\u0026gt;:6901，密码 vncpassword VNC：\u0026lt;IP\u0026gt;:5901，密码 vncpassword RDP：\u0026lt;IP\u0026gt;:3389，用户名 user 密码 password  说明：这个镜像使用的是非常小巧的Fluxbox桌面环境，进入桌面后右键点击桌面空白处即可弹出菜单。\n镜像详细说明：https://hub.docker.com/r/soff/tiny-remote-desktop\n其他类似镜像 https://hub.docker.com/r/consol/centos-xfce-vnc\nhttps://hub.docker.com/r/soff/ubuntu-xfce-vnc\nhttps://github.com/fcwu/docker-ubuntu-vnc-desktop","title":"Linux VPS一键搭建远程桌面（包含Chrome和Firefox）教程"},{"content":"","permalink":"https://renzhn.github.io/archives/","summary":"archives","title":"归档"},{"content":"","permalink":"https://renzhn.github.io/search/","summary":"search","title":"搜索"}]